swagger: "2.0"
info:
  version: "0.0.1"
  title: Rafiki
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /actividades:
    # our controller name
    x-swagger-router-controller: actividad
    get:
      description: Obtener la lista de actividades
      operationId: getActividades
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Actividad"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir una nueva actividad
      operationId: postActividad
      # movie info to be stored
      parameters:
        - name: data
          description: Atributos de actividad
          in: body
          required: true
          schema:
            $ref: "#/definitions/Actividad"     
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Actividad"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /actividades/{id}:
    # our controller name
    x-swagger-router-controller: actividad
    get:
      description: Obtener una actividad
      operationId: getActividadId
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Actividad"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Actualizar una actividad
      operationId: updateActividad
      # define the parameters
      parameters:
        - name: id
          description: Id de Actividad
          type: string
          in: path
          required: true
        - name: data
          description: Atributos de actividad
          in: body
          required: true
          schema:
            $ref: "#/definitions/Actividad"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Actividad"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"        
    delete:
      description: Eliminar actividad
      operationId: deleteActividad
      # define the parameters
      parameters:
        - name: id
          description: Id de actividad
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Actividad"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login/{role}:
    x-swagger-router-controller: login
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /niveles/{id}:
      # our controller name
    x-swagger-router-controller: nivel
    get:
      description: Obtener un nivel capturado por id
      operationId: getNivelId
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Nivel"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put: 
      description: Actualizar nivel ingresado por id
      operationId: updateNivel
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: data
          description: Atributos Nivel
          in: body
          required: true
          schema:
            $ref: "#/definitions/Nivel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Nivel"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete: 
      description: eliminar el nivel ingresado por id
      operationId: deleteNivel
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Nivel"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /niveles:
    # our controller name
    x-swagger-router-controller: nivel
    get:
      description: Obtener la lista de niveles académicos
      operationId: get_niveles
      #security:
      #  - Bearer: []
      #x-security-scopes:
      #  - admin
      #  - user 
      #  - israel
     # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir un nuevo nivel
      operationId: createNivel
      # movie info to be stored
      parameters:
        - name: data
          description: Atributos Nivel
          in: body
          required: true
          schema:
            $ref: "#/definitions/Nivel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Nivel"
  /asignaturas:
    x-swagger-router-controller: asignatura
    get:
      description: Obtener la lista de asignaturas
      operationId: getAsignaturas
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Asignatura"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir una nueva asignatura
      operationId: postAsignatura
      # movie info to be stored
      parameters:
        - name: name
          description: Atributos Asignatura
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asignatura"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Asignatura"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organizaciones:
    # our controller name
    x-swagger-router-controller: organizacion
    get:
      description: Obtener la lista de organizaciones
      # define the type of response for Success "200" and Error
      operationId: getListOrganizaciones
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Organizacion"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir una nueva organizacion
      operationId: createOrganizacion
      parameters:
        - name: data
          description: Atributos usuario
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organizacion"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Organizacion"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asignaturas/{id}:
    # our controller name
    x-swagger-router-controller: asignatura
    get:
      description: Obtener un usuario
      operationId: getAsignatura
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Asignatura"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Actualizar una asignatura
      operationId: updateAsignatura
      # define the parameters
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: data
          description: Propiedades de Asignatura
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asignatura"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Asignatura"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Eliminar una Asignatura
      operationId: deleteAsignatura
      # define the parameters
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Asignatura"
  /cursos:
    # our controller name
    x-swagger-router-controller: cursos
    get:
      description: Obtener la lista de cursos
      operationId: getCursos
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Curso"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir un nuevo curso
      operationId: postCurso
      # movie info to be stored
      parameters:
        - name: data
          description: Atributos de curso
          in: body
          required: true
          schema:
            $ref: "#/definitions/Curso"     
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Curso"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /organizaciones/{id}:
    # our controller name
    x-swagger-router-controller: organizacion
    get:
      description: Obtener una organizacion
      operationId: getOrganizacion
      # define the type of response for Success "200  " and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Organizacion"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Actualizar una organizacion
      operationId: updateOrganizacion
      # define the parameters
      parameters:
        - name: id
          description: ID de la organizacion
          type: string
          in: path
          required: true
        - name: data
          description: Propiedades de la organizacion
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organizacion"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Organizacion"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Eliminar organizacion
      operationId: deleteOrganizacion
      # define the parameters
      parameters:
        - name: id
          description: Id de la organizacion
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Organizacion"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"                
  /cursos/{id}:
    # our controller name
    x-swagger-router-controller: cursos
    get:
      description: Obtener un curso
      operationId: getCursoId
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Curso"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Actualizar un curso
      operationId: updateCurso
      # define the parameters
      parameters:
        - name: id
          description: Curso id
          type: string
          in: path
          required: true
        - name: name
          description: Propiedades de User
          in: body
          required: true
          schema:
            $ref: "#/definitions/Curso"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Curso"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"        
    delete:
      description: Eliminar curso
      operationId: deleteCurso
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Curso"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: Obtener la lista de usuarios
      # define the type of response for Success "200" and Error
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Añadir un nuevo usuario
      # movie info to be stored
      operationId: postUser
      parameters:
        - name: data
          description: Atributos usuario
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{id}:
    # our controller name
    x-swagger-router-controller: users
    get:
      description: Obtener un usuario
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Actualizar un usuario
      # define the parameters
      operationId: updateUser
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - name: name
          description: Propiedades de User
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Eliminar User
      # define the parameters
      operationId: deleteUser
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetUsersListResponse:
    required:
      - users
    properties:
      # The array of movies
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            rut:
              type: string
            mail:
              type: string
  Asignatura:
    type: object
    properties:
      nombre:
        type: string
        description: Nombre completo de la asignatura
      enfasis:
        type: array
        items: 
          type: string
        description: Descripcion de lo esperado para la asignatura
      horasPedagogicasConJecAnual:
        type: number
        description: Numero de horas anuales con jornada escolar completa
      horasPedagogicasSinJecAnual:
        type: number
        description: Numero de horas anuales sin jornada escolar completa
      horasPedagogicasConJecSemanal:
        type: number
        description: Numero de horas semanales con jornada escolar completa
      horasPedagogicasSinJecSemanal:
        type: number
        description: Numero de horas semanales sin jornada escolar completa
  Organizacion:
    type: object
    properties:
      nombre:
        type: string
        description: Nombre completo de la organizacion
      rbd:
        type: number
        description: Numero Rol Base de Datos de la organizacion
      descripcion:
        type: string
        description: Descripcion de la organizacion
      reconocimientoOficial:
        type: string
        description: Fecha de reconocimiento oficial de la organizacion
      dependencia:
        type: string
        description: Tipo de organizacion (Municipal, Subvencionado, etc)
      sostenedor:
        type: string
        description: Nombre del sostenero de la organizacion
      orientacionReligiosa:
        type: string
        description: Nombre de la orientacion religiosa de la organizacion
      direccion:
        type: object
        description: Objeto que contiene la ubicacion de la organizacion
        properties:
          calle:
            type: string
            description: Nombre de la calle en donde se ubica la organizacion
          region:
            type: string
            description: Nombre de la region en donde se ubica la organizacion
          comuna:
            type: string
            description: Nombre de la comuna en donde se ubica la organizacion
      correo:
        type: string
        description: Correo de la organizacion
      telefono:
        type: string
        description: Telefono de la organizacion
      web:
        type: string
        description: Pagina web de la organizacion
      director:
        type: string
        description: Nombre del director de la organizacion
      numVacantes:
        type: number
        description: Numero de vacantes disponibles de la organizacion
      fechaPostulacion:
        type: object
        description: Objeto que contiene la fecha de inicio y cierre de la organizacion
        properties:
          inicio:
            type: string
            description: Fecha de inicio para las postulaciones de la organizacion
          cierre:
            type: string
            description: Fecha de cierre para las postulaciones de la organizacion
      mensualidad:
        type: number
        description: Costo de la mensualidad de la organizacion
      totalAlumnosMatriculados:
        type: number
        description: Cantidad total de alumnos matriculados en la organizacion
      promAlumnosCurso:
        type: number
        description: Promedio general de alumnos por curso en la organizacion
      puntajeSimce:
        type: number
        description: Ultimo puntaje SIMCE obtenido por los alumnos en la organizacion 
  User:
    type: object
    properties:
      _id:
        type: string
      _v:
        type: number
      nombre:
        type: string
        description: Nombre completo del usuario
      rut:
        type: string
        description: RUT del usuario
      correo:
        type: string
        description: Correo del usuario
      role:
        type: array
        items:
          type: string
        description: Tipo de usuario
  Nivel:
    type: object
    properties:
      sigla:
        type: string
        description: Nombre completo del usuario
      tipo_nivel:
        type: string
        description: RUT del usuario
      grado:
        type: number
        description: Correo del usuario
      descripcion:
        type: string
        description: descripción del nivel
      decreto:
        type: string
        description: Decreto para el nivel académico
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      message:
        type: string
        description: a short comment 
    required:
      - success
      - message
  GetUserResponse:
    required:
      - id
      - name
      - rut
    properties:
      id:
        type: string
      name: 
        type: string
      rut:
        type: string
      mail:
        type: string
  Curso:
    type: object
    properties:
      idCurso:
        type: string
        description: Sigla del curso (Ejemplo 1A)
      nivel:
        type: string
        description: Nivel educacional del curso
      asignatura:
        type: string
        description: Nombre de la asignatura
      profesorJefe:
        type: string
        description: Nombre del profesor jefe del curso
      salaCurso:
        type: string
        description: Sala del curso
      totalAlumnos:
        type: number
        description: Cantidad total de alumnos del curso
  Actividad:
    type: object
    properties:
      profesorAutor:
        type: string
        description: Nombre del autor de la actividad
      anhoAcademico:
        type: number
        description: Año en que se crea la actividad
      semestre:
        type: number
        description: Semestre en que se crea la actividad (1 - 2)
      nivelDificultad:
        type: string
        description: Nivel de dificultad de la actividad
      nivelAprendizaje:
        type: string
        description: Nivel de aprendizaje ('Recordar', 'Comprender', 'Aplicar','Analizar','Evaluar', 'Crear')
      tipoPregunta:
        type: string
        description: Tipo de pregunta ('Enumeracion', 'Conocimiento especifico', 'Ensayo','Verdadero y Falso','Alternativas')
      asignatura:
        type: string
        description: Nombre de la asignatura
      tema:
        type: string
        description: Nombre del tema de la actividad
      subTema:
        type: string
        description: Nombre del subtema de la actividad
      preguntaEnunciado:
        type: string
        description: Enunciado de la pregunta
      preguntaAlternativas:
        type: array
        items: 
          type: string
        description: Alternativas correspondientes al enunciado de la pregunta
      respuesta:
        type: string
        description: Respuesta de referencia 
      respuestaVerdaderoFalso:
        type: boolean
        description: Respuesta de referencia para pregunta de Verdadero y Falso (true - false)
      respuestaAlternativas:
        type: array
        items: 
          type: string
        description: Respuesta(s) de referencia para pregunta de Alternativas
      puntajeTotal:
        type: number
        description: Puntaje total de la pregunta
      retroalimentacion:
        type: array
        items: 
          type: string
        description: Enlaces y/o información complementaria para ser entregada como retroalimentación
